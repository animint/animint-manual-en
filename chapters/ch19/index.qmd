# P-values

```{r setup, echo=FALSE}
knitr::opts_chunk$set(fig.path="ch19-figures/")
if(FALSE){
  knitr::knit("index.qmd")
}
```

In this chapter we will explore several data visualizations of P-values.

```{r}
library(data.table)
set.seed(1)
offset_by <- 0.1
sd_by <- 0.1
sim_dt <- CJ(
  repetition=seq_len(100),
  true_offset=seq(-3, 3, by=offset_by),
  sd=seq(0.1, 1, by=sd_by),
  sample=seq(0, 9)
)[, let(
  condition = sample %% 2,
  i = sample %/% 2
)][, let(
  Condition = factor(condition, 0:1, c("zero","offset")),
  sim = rnorm(.N, true_offset*condition, sd)
)][]

sim_wide <- dcast(
  sim_dt,
  true_offset + sd + repetition + i ~ Condition,
  value.var="sim")
sim_p <- sim_wide[, {
  t.result <- t.test(zero, offset, var.equal=TRUE)
  with(t.result, data.table(
    p.value,
    mean_zero=estimate[1],
    mean_offset=estimate[2]
  ))
}, by=.(true_offset, sd, repetition)]

sim_p[, let(
  diff_means = mean_offset-mean_zero,
  neg.log10.p=-log10(p.value),
  significant=p.value<0.05
)][]
library(animint2)
ggplot()+
  geom_point(aes(
    diff_means, neg.log10.p, fill=true_offset, color=sd),
    shape=21,
    data=sim_p)+
  scale_fill_gradient2()+
  scale_color_gradient(low="white", high="black")+
  theme_bw()

myround <- function(x, bin_size=1, offset=0)round((x+offset)/bin_size)*bin_size
tile_dt <- sim_p[, let(
  round_diff_means=myround(diff_means),
  round_neg.log10.p=myround(neg.log10.p)
)][, .(
  tests=.N
), by=.(round_diff_means, round_neg.log10.p)]
ggplot()+
  geom_tile(aes(
    round_diff_means, round_neg.log10.p, fill=log10(tests)),
    data=tile_dt)+
  scale_fill_gradient(low="white",high="black")+
  theme_bw()

sim_p_means <- melt(
  sim_p,
  measure.vars=measure(Condition, pattern="mean_(.*)"))
sim_stats <- dcast(
  sim_p,
  true_offset + sd ~ .,
  mean,
  value.var=c("diff_means", "neg.log10.p"))

width <- offset_by*0.4
height <- sd_by*0.45
animint(
  tiles=ggplot()+
    scale_fill_gradient2()+
    scale_color_gradient(low="white", high="black")+
    theme_bw()+
    theme_animint(width=1000)+
    geom_rect(aes(
      xmin=true_offset-width, xmax=true_offset+width,
      ymin=sd-height, ymax=sd+height,
      fill=diff_means, color=neg.log10.p),
      data=sim_stats))

## Type I error rate analysis.
sim_p[true_offset==0]

## zoom to one tile.
to <- 0
one_tile_means <- sim_p_means[true_offset==to & sd==0.1]
one_tile_p <- sim_p[true_offset==to & sd==0.1]
one_tile_sim <- sim_dt[true_offset==to & sd==0.1]
ggplot()+
  geom_point(aes(
    repetition, value, color=Condition, fill=what),
    data=data.table(one_tile_means, what="mean"))+
  geom_segment(aes(
    repetition, mean_zero,
    linetype=significant,
    xend=repetition, yend=mean_offset),
    data=one_tile_p)+
  geom_point(aes(
    repetition, sim, color=Condition, fill=what),
    data=data.table(one_tile_sim, what="data"))+
  scale_fill_manual(values=c(
    data=NA,
    mean="black"))
```
